{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/assem/Desktop/AGA_lecture_summarization/src/Main.js\";\nimport React from 'react';\nimport './App.css';\nimport ContentEditable from 'react-contenteditable';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      detail: \"Medium\"\n    };\n    this.ContentEditable = /*#__PURE__*/React.createRef();\n  }\n\n  hoverSpan(event) {\n    if (event.target.nodeName === \"SPAN\") {\n      // IT CAN GET THE TEXT INSIDE THE SPAN, SO PUT EVERY WORD INSIDE A SPAN\n      console.log(event.target.textContent);\n    }\n  }\n\n  componentDidMount() {\n    console.log(this.ContentEditable.current);\n    this.ContentEditable.current.addEventListener(\"mouseover\", this.hoverSpan);\n  }\n\n  render() {\n    var btns = [\"Low\", \"Medium\", \"High\"];\n    var tmp = \"<span>Text 1</span>     <span>Text 2</span>\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid min-vh-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 video-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row video-container\",\n            children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n              title: \"video\",\n              src: \"https://www.youtube.com/embed/tgbNymZ7vqY\",\n              className: \"video\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row video-info-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"subtitle\",\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 33\n              }, this), \"Author\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 33\n              }, this), \"# Visualizations\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row complexity-info-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-7\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"subtitle\",\n                  children: \"Level of Detail\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 33\n                }, this), \"How summarized you want your lecture to be\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-4\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-btn\",\n                  children: btns.map((name, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: name === this.state.detail ? \"btn btn-light detail-btn\" : \"btn btn-dark detail-btn\",\n                    onClick: () => this.setState({\n                      detail: name\n                    }),\n                    children: name\n                  }, \"btn\" + name, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 41\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 text-col\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-header\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-danger\",\n                onClick: () => this.props.setPage(\"edit\"),\n                children: \"Show Original Text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary min-vh-100\",\n              children: /*#__PURE__*/_jsxDEV(ContentEditable, {\n                innerRef: this.ContentEditable,\n                html: tmp,\n                disabled: false,\n                onChange: this.props.editSummary\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/assem/Desktop/AGA_lecture_summarization/src/Main.js"],"names":["React","ContentEditable","Main","Component","constructor","props","state","detail","createRef","hoverSpan","event","target","nodeName","console","log","textContent","componentDidMount","current","addEventListener","render","btns","tmp","map","name","idx","setState","setPage","editSummary"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport ContentEditable from 'react-contenteditable';\n\nclass Main extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            detail: \"Medium\"\n        }\n\n        this.ContentEditable = React.createRef();\n    }\n\n    hoverSpan(event) {\n        if (event.target.nodeName === \"SPAN\") { // IT CAN GET THE TEXT INSIDE THE SPAN, SO PUT EVERY WORD INSIDE A SPAN\n            console.log(event.target.textContent);\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.ContentEditable.current);\n        this.ContentEditable.current.addEventListener(\"mouseover\", this.hoverSpan);\n    }\n\n\n\n    render() {\n        var btns = [\"Low\", \"Medium\", \"High\"];\n\n        var tmp = \"<span>Text 1</span>     <span>Text 2</span>\";\n\n        return (\n            <div className=\"container-fluid min-vh-100\">\n                <div className=\"row\">\n                    <div className=\"col-6 video-col\">\n                        <div className=\"row video-container\">\n                            <iframe title=\"video\"\n                            src=\"https://www.youtube.com/embed/tgbNymZ7vqY\"\n                            className=\"video\"/>\n                        </div>\n                        <div className=\"row video-info-container\">\n                            <div>\n                                <h4 className=\"subtitle\">Title</h4>\n                                Author\n                                <br/>\n                                # Visualizations\n                            </div>\n                            \n                        </div>\n                        <hr/>\n                        <div className=\"row complexity-info-container\">\n                            <div className=\"row\">\n                            <div className=\"col-7\">\n                                <h2 className=\"subtitle\">Level of Detail</h2>\n                                How summarized you want your lecture to be\n                            </div>\n                            <div className=\"col-4\">\n                                <div className=\"col-btn\">\n                                    {btns.map((name, idx) => (\n                                        <button type=\"button\" key={\"btn\" + name}\n                                        className={(name === this.state.detail)? \"btn btn-light detail-btn\" : \"btn btn-dark detail-btn\"}\n                                        onClick={() => this.setState({detail: name})}>\n                                            {name}\n                                        </button>\n                                    ))}\n                                    {/* <button type=\"button\" className=\"btn btn-light detail-btn\">Low</button>\n                                    <button type=\"button\" className=\"btn btn-light detail-btn\">Medium</button>\n                                    <button type=\"button\" className=\"btn btn-light detail-btn\">High</button> */}\n                                </div>\n                            </div>\n                            </div>\n                            \n                        </div>\n                        <hr/>\n                    </div>\n                    <div className=\"col-6 text-col\">\n                        <div className=\"container\">\n                            <div className=\"summary-header\">\n                                <button type=\"button\" className=\"btn btn-danger\"\n                                onClick={() => this.props.setPage(\"edit\")}>Show Original Text</button>\n                            </div>\n                            <div className=\"summary min-vh-100\">\n                                <ContentEditable \n                                innerRef={this.ContentEditable} \n                                html={tmp}\n                                disabled={false}\n                                onChange={this.props.editSummary}/>\n                            </div>\n                        </div>\n                        \n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}